description "Upstart job definition for proxy-node-app"
author "Your Name"

# Automatically start the app when the filesystem and networking become available.
# Automatically stop the app on system shutdown.

start on filesystem and started networking
stop on shutdown

# Specify that the service should respawn if it quits unexpectedly. The respawn
# limit says that if the service respawns more than 10 times in 5 seconds it
# should quit respawning.

respawn
respawn limit 10 5

# Export a bunch of environment variables to be used below and in the Node app.
# Note: variable expansion concatenation not working as expected with the Upstart
# env stanza, so just writing them out the long way for now.

env USER=root
env GROUP=root
env PORT=80
env ENTRYPOINT=index.js
env APP_DIR=/var/local/node-apps/proxy-node-app
env NODE_ENV=production
env NODE_BIN=/usr/bin/node
env LOG_DIR=/var/opt/node/log
env PID_DIR=/var/opt/node/run
env LOG_FILE=/var/opt/node/log/proxy-node-app.log
env PID_FILE=/var/opt/node/run/proxy-node-app.pid

# The pre-start script executes just before the app is started.
# We make the log directory and the run directory for storing the
# pidfile. Additionally we set ownership of these to the node user.

pre-start script
    mkdir -p $LOG_DIR
    mkdir -p $PID_DIR
    chown -R node:node $LOG_DIR
    chown -R node:node $PID_DIR
end script

# This script actually starts the app. Since this is a front-facing 
# reverse proxy it needs to start on port 80 so we start as root, then
# downgrade to the node user internally in the app code. For any other
# standard Node app however we should start as the node user from the
# beginning. By changing directory to the Node app's location we enable
# the use of relative paths inside the Node app's code. Additionally,
# stdout and stderr from the Node app are both piped to the log file.

script
	exec start-stop-daemon --start --make-pidfile --pidfile $PID_FILE --chdir $APP_DIR --chuid $USER:$GROUP --exec $NODE_BIN $ENTRYPOINT >> $LOG_FILE 2>&1
end script

# The post-stop script executes after the app has shut down, and in
# this case all we need to do is clean up the pidfile, start-stop-daemon
# will not automatically remove the pidfile it makes.

post-stop script
	rm -f $PID_FILE
end script