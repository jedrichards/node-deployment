#!/bin/sh

# Generic simple deployment script for checking out Node app project files
# from a bare Git rep. The Node app to work with is defined by the APP_NAME
# environment variable.
#
# The Git repo is expected to be found at:
# /home/git/repositories/app-name.git
#
# The Node app's project folder is expected at:
# /var/local/node-apps/app-name

echo "Executing post-receive hook for $APP_NAME ..."

# Export environment variables for deployment operation.
# These will be picked up in the sub process invoked by
# git checkout later on.

export GIT_DIR=/home/git/repositories/"$APP_NAME".git
export GIT_WORK_TREE=/var/local/node-apps/"$APP_NAME"

echo "Using Git repo $GIT_DIR"
echo "Using Node app folder $GIT_WORK_TREE"

# Check that by concatenating strings with the value
# of APP_NAME we've created valid filesystem locations.

if [ ! -d "$GIT_DIR" ]; then
    echo "Error, Git repo not found"
    exit 1
fi

if [ ! -d "$GIT_WORK_TREE" ]; then
    echo "Error, Node app folder not found"
    exit 1
fi

# Stop the app via Monit. Give Monit time to do its thing
# before directly manipulating any files.

echo "Stopping $APP_NAME with Monit ..."
monit stop "$APP_NAME"
sleep 4

# Sync the app location with the latest files in the
# repo via git checkout. Also change ownership of all the
# app files to the node user (we're currently root).

echo "Moving app files to $GIT_WORK_TREE" ...
unset GIT_INDEX_FILE
git checkout -f
chown -R node:node "$GIT_WORK_TREE"

# Restart the app via Monit.

echo "Restarting $APP_NAME with Monit ..."
sleep 1
monit restart "$APP_NAME"

echo "Deployment complete!"
exit 0